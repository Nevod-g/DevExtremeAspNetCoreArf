@*@page "{id}" скрыть параметр в строке*@
@page
@model IndexModel
@{
    ViewData["Title"] = "Arf";
    Layout = "~/Pages/Shared/_Layout.cshtml";

    //var dirPath = $"/images/{Arf.Address ?? "nopath"}";
}

<head>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="description" content="">
    <meta name="author" content="">

    <link rel="icon" href="~/lib/icon/ProcessBank16.ico">
    <link rel="stylesheet" href="~/css/styles.css" type="text/css"/>
</head>

@*@Html.ActionLink("Description", "GetFileArf", "Index")
<a href="@Url.Page("Index", "GetFileArf")">Download</a>*@

 <form asp-page-handler="DownloadArfJson" method="post" >    
    <button class="btn btn-outline-dark btn-sm" value="Import">Import Data</button>
    <button class="btn btn-outline-primary btn-sm" value="Save">Save</button>
</form>

<button id="btnPost" class="btn btn-outline-info btn-sm" value="Post">Post</button>

@using(Html.BeginForm(null, null, FormMethod.Post, 
    new {enctype = "multipart/form-data"})) // Аргумент позволяет передавать из формы какие-либо данные
{
    using(Html.DevExtreme().ValidationGroup()) {

        @Html.AntiForgeryToken() // Отключить защиту https://en.wikipedia.org/wiki/Cross-site_request_forgery
        // Скрытые параметры, которые требуется передавать с сервера и обратно
        //<input type="hidden" asp-for="Arf.Id">
        //<input type="hidden" asp-for="Arf.CreateDt">
        <input type="hidden" asp-for="Arf.GuId">

        <h2 style="text-align: center;">CUSTOMER APPLICATION REQUEST FORM</h2>
            <center>
                <i><b>
                    Please fill this form as completely as possible and send with samples. Filling this form will help speed up your processing request.
                </b></i>
            </center>
        <p />        

        <div class="dx-fieldset" id="field-container">

            <div class="flex-container" style="margin-left: 0%; width: 100%;">
                <div class="dx-field" style="flex-grow: 3;">

                    @(Html.DevExtreme().Button()
                        .ID("import-button-top")
                        .Text("Import Data")
                        .Icon("import")
                        .Type(ButtonType.Normal)
                        .UseSubmitBehavior(false)
                        .OnClick("ImportButton_Click")
                    )
                    @(Html.DevExtreme().Button()
                        .ID("save-button-top")
                        .Text("Save")
                        .Icon("save")
                        .Type(ButtonType.Default)
                        .UseSubmitBehavior(false)
                        .OnClick("SaveButton_Click")
                    )
                </div>
 
                <div class="dx-field">
                    <div class="dx-field" style="flex-grow: 6; margin-top: 0px;">
                        @(Html.DevExtreme().SelectBoxFor(m => m.Arf.Language)
                            .ID("Language")
                            .DataSource(d => d.Mvc().Controller("DataSource").LoadAction("Languages").Key("Id"))
                            .Placeholder("Language")
                            //.Label("Language")
                            //.LabelMode(EditorLabelMode.Floating)
                            .Width(110)
                            .ValueExpr("Id")
                            .DisplayExpr("ShortName")
                            .AcceptCustomValue(true)
                            .FieldTemplate(@<text>
                                <div class="custom-item">
                                    <% if(typeof ImageSrc !== 'undefined') { %>
                                        <img src="<%- ImageSrc %>" />
                                    <% } %>
                                    @(Html.DevExtreme().TextBox()
                                        .Value(new JS("typeof ShortName !== 'undefined' && ShortName"))
                                        .ElementAttr("class", "product-name")
                                        .ReadOnly(true)
                                    )
                                </div>
                            </text>)
                            .ItemTemplate(@<text>
                                <div class="custom-item">
                                    <img src="<%- ImageSrc %>" />
                                    <div class="product-name"><%- Name %></div>
                                </div>
                            </text>)
                            .OnValueChanged("Language_ValueChanged")
                        )
                    </div>
                </div>
            </div>

            <div class="dx-fieldset-header">Project Type</div>
            <div class="panel">
                <div class="flex-container" style="margin-left: 10%; width: 90%;">
                    <div class="dx-field" style="flex-grow: 17;">
                        <div class="dx-field">                        
                            <div class="dx-field-lable" style="width: 100%; text-align: left; margin-top: 6px;">                               
                                @(Html.DevExtreme().CheckBoxFor(m => m.Arf.ClassifiedOrControlled)
                                    .ID("ClassifiedOrControlled")
                                    .Text("Classified/Controlled")                                    
                                    .ValidationStatus(Model.Arf.ClassifiedOrControlled == null ? ValidationStatus.Invalid : ValidationStatus.Valid)                                                            
                                    )
                            </div>
                        </div>
                    </div>
                    <div style="flex-grow: 83;">
                        <div class="dx-field">
                            <div class="dx-field-label" style="width: 70%; text-align: right;">
                                Enter ECCN or USML number for parts if known:
                            </div>
                            <div class="dx-field-value" style="width: 30%;">
                                @(Html.DevExtreme().TextBoxFor(m => m.Arf.PartsNumber)
                                    .Placeholder("ECCN or USML")                                    
                                )
                            </div>
                        </div>
                    </div>
                </div>
             
                <div class="flex-container" style="margin-left: 10%; width: 90%;">
                    <div class="dx-field" style="flex-grow: 3;">
                        <div class="dx-field-lable" style="width: 100%; text-align: left; margin-top: 6px;">
                            @(Html.DevExtreme().CheckBoxFor(m => m.Arf.ITAR)
                                .ID("ITAR")
                                .Text("ITAR")
                                .Hint("IPG Sales to Contact IPG Trade compliance officer (1149) first. Or Ext 1122 before sending parts or information to lab.")                                
                                .ValidationStatus(Model.Arf.ITAR == null ? ValidationStatus.Invalid : ValidationStatus.Valid)
                                )
                        </div>                    
                    </div>
                    <div style="flex-grow: 7;">
                        <div class="dx-field-label" style="width: 100%; text-align: right; font-size:80%; color: dimgray;">
                            <i>IPG Sales to Contact IPG Trade compliance officer (1149) first. Or Ext 1122 before sending parts or information to lab.</i>
                        </div>                    
                    </div>
                </div>
            </div>
        
            <div class="dx-fieldset-header">Sample Type</div>
            <div class="panel">
                <div class="flex-container" style="margin-left: 10%; width: 90%;">
                    <div class="dx-field" style="flex-grow: 5;">
                        @(Html.DevExtreme().CheckBoxFor(m => m.Arf.ArePartsTest)
                            .ID("ArePartsTest")
                            .Text("Are the parts test samples/coupons")
                            .Hint("")
                            .ValidationStatus(Model.Arf.ArePartsTest == null ? ValidationStatus.Invalid : ValidationStatus.Valid)
                        )
                    </div>
                    <div class="dx-field" style="flex-grow: 5;">
                        @(Html.DevExtreme().CheckBoxFor(m => m.Arf.UsedInManufacturing)
                            .ID("UsedInManufacturing")
                            .Text("Is this a part for use in manufacturing")
                            .Hint("If yes, provided the USML or ECCN number above.")
                            .ValidationStatus(Model.Arf.UsedInManufacturing == null ? ValidationStatus.Invalid : ValidationStatus.Valid)
                        )
                    </div>
                </div>
            </div>
        </div>            

        <div class="dx-fieldset" id="field-container">
            <div class="dx-fieldset-header" style="text-align: left;">Contact Data</div>
            <div class="panel">

                <div class="flex-container" style="text-align: right;">
                    <div class="dx-field" style="flex-grow: 4; margin-left: 2px;">
                        <div class="dx-field">
                            <div class="dx-field-label" style="width: 28%;">
                                @Html.LabelFor(m => m.Arf.ContactName)
                            </div>
                            <div class="dx-field-value" style="width: 72%;">
                                @(Html.DevExtreme().TextBoxFor(m => m.Arf.ContactName)
                                    .Placeholder("Contact Name")
                                )
                            </div>
                        </div>
                    </div>
                    <div class="dx-field" style="flex-grow: 3;">
                        <div class="dx-field">
                            <div class="dx-field-label" style="width: 24%;">
                                Phone
                            </div>
                            <div class="dx-field-value" style="width: 76%;">
                                @(Html.DevExtreme().TextBoxFor(m => m.Arf.PhoneNumber) 
                                    .Placeholder("Phone Number")
                                )
                            </div>
                        </div>
                    </div>
                    <div class="dx-field" style="flex-grow: 3;">
                        <div class="dx-field">
                            <div class="dx-field-label" style="width: 24%;">
                                Mobile
                            </div>
                            <div class="dx-field-value" style="width: 76%;">
                                @(Html.DevExtreme().TextBoxFor(m => m.Arf.MobileNumber)
                                    .Mask("+0 (X00) 000-0000")
                                    .MaskRules(new { X = new JS("/[02-9]/") })
                                    .MaskInvalidMessage("The phone must have a correct phone format")
                                )
                            </div>
                        </div>
                    </div>
                </div>

                <div class="dx-field" style="text-align: right; margin-left: 0%; width: 100%;">
                    <div class="dx-field-label" style="width: 10%;">Title</div>
                    <div class="dx-field-value" style="width: 90%;">
                        @(Html.DevExtreme().TextBoxFor(m => m.Arf.ContactTitle)
                            .Placeholder("Contact Title")
                        )
                    </div>
                </div>

                <div class="dx-field" style="text-align: right;">
                    <div class="dx-field-label" style="width: 10%;">
                        @Html.LabelFor(m => m.Arf.Email)
                    </div>
                    <div class="dx-field-value" style="width: 90%;">
                        @(Html.DevExtreme().TextBoxFor(m => m.Arf.Email)
                            .Placeholder("Contact Email")
                        )
                    </div>
                </div>

                <div class="dx-field" style="text-align: right; margin-left: 0%; width: 100%;">
                    <div class="dx-field-label" style="width: 10%;">Company</div>
                    <div class="dx-field-value" style="width: 90%;">
                        @(Html.DevExtreme().TextBoxFor(m => m.Arf.CompanyName)
                            .Placeholder("Company Name")
                        )
                    </div>
                </div>

                <div class="flex-container" style="text-align: right;">
                    <div class="dx-field" style="flex-grow: 4; margin-left: 2px;">
                        <div class="dx-field">
                            <div class="dx-field-label" style="width: 28%;">
                                Street
                            </div>
                            <div class="dx-field-value" style="width: 72%;">
                                @(Html.DevExtreme().TextBoxFor(m => m.Arf.Street)
                                    .Placeholder("Street")
                                )
                            </div>
                        </div>
                    </div>
                    <div class="dx-field" style="flex-grow: 3;">
                        <div class="dx-field">
                            <div class="dx-field-label" style="width: 24%;">
                                House
                            </div>
                            <div class="dx-field-value" style="width: 76%;">
                                @(Html.DevExtreme().TextBoxFor(m => m.Arf.HouseNumber) 
                                    .Placeholder("House Number")
                                )
                            </div>
                        </div>
                    </div>
                    <div class="dx-field" style="flex-grow: 3;">
                        <div class="dx-field">
                            <div class="dx-field-label" style="width: 24%;">
                                Postal
                            </div>
                            <div class="dx-field-value" style="width: 76%;">
                                @(Html.DevExtreme().TextBoxFor(m => m.Arf.PostalCode)
                                    .Placeholder("Postal Code")
                                )
                            </div>
                        </div>
                    </div>
                </div>

                <div class="flex-container" style="text-align: right;">
                    <div class="dx-field" style="flex-grow: 5; margin-left: -5px;">
                        <div class="dx-field">
                            <div class="dx-field-label" style="width: 20%;">
                                @Html.LabelFor(m => m.Arf.Country)
                            </div>
                            <div class="dx-field-value" style="width: 80%;">
                                @(Html.DevExtreme().SelectBoxFor(m => m.Arf.Country)
                                    .DataSource(d => d.Mvc().Controller("DataSource").LoadAction("Countries").Key("this"))
                                    .Placeholder("Select Country")
                                )
                            </div>
                        </div>
                    </div>
                    <div class="dx-field" style="flex-grow: 5;">
                        <div class="dx-field">
                            <div class="dx-field-label" style="width: 20%;">
                                @Html.LabelFor(m => m.Arf.City)                                
                            </div>
                            <div class="dx-field-value" style="width: 80%;">
                                @(Html.DevExtreme().TextBoxFor(m => m.Arf.City)
                                    .Placeholder("Town/City")                                    
                                )
                            </div>
                        </div>
                    </div>
                </div>
            
                <div class="dx-field" style="text-align: right;">
                    <div class="dx-field-label" style="width: 10%;">
                        Address
                    </div>
                    <div class="dx-field-value" style="width: 90%;">
                        @(Html.DevExtreme().TextBoxFor(m => m.Arf.Address)
                            .Placeholder("Other address information")
                        )
                    </div>
                </div>
                
            </div>
        </div>

        <div class="dx-fieldset" id="field-container">
            <div class="dx-fieldset-header" style="text-align: left;">IPG Sales Contact</div>
            <div class="panel">
            
                <div class="flex-container" style="margin-left: 10%; width: 90%;">
                    <div class="dx-field" style="flex-grow: 3;">
                        <div class="dx-field-lable" style="width: 100%; text-align: left; margin-top: 6px;">
                            @(Html.DevExtreme().CheckBoxFor(m => m.Arf.IsNewCustomer)
                                .ID("IsNewCustomer")
                                .Text("New Customer")
                                .Hint("If yes have Screened (Ext 1149 or 1122)")
                                .ValidationStatus(Model.Arf.IsNewCustomer == null ? ValidationStatus.Invalid : ValidationStatus.Valid)
                                )
                        </div>
                    </div>
                    <div style="flex-grow: 7;">
                        <div class="dx-field-label" style="width: 100%; text-align: right; font-size:80%; color: dimgray;">
                            <i>If you are a new client, have Screened (Ext 1149 or 1122).</i>
                        </div>
                    </div>
                </div>
                
                <div class="dx-field" style="text-align: right;">
                    <div class="dx-field-label" style="width: 10%;">
                        Opportunity
                    </div>
                    <div class="dx-field-value" style="width: 90%;">
                        @(Html.DevExtreme().SelectBoxFor(m => m.Arf.Opportunity)
                            .DataSource(d => d.Mvc().Controller("DataSource").LoadAction("Opportunitys").Key("this"))
                            .Placeholder("Select Opportunity")
                            .Hint("In this list includes states, provinces and territories.")
                        )
                    </div>
                </div>
            </div>            
        </div>            

        <div class="dx-fieldset" id="field-container">
            <div class="dx-fieldset-header" style="text-align: left;">Application</div>
            <div class="panel">

                <div class="flex-container" style="text-align: right;">
                    <div class="dx-field" style="flex-grow: 5; margin-left: -2px;">
                        <div class="dx-field">
                            <div class="dx-field-label" style="width: 21%;">
                                Type
                            </div>
                            <div class="dx-field-value" style="width: 79%;">
                                @(Html.DevExtreme().SelectBoxFor(m => m.Arf.ProcessType)
                                    .DataSource(d => d.Mvc().Controller("DataSource").LoadAction("ProcessTypes").Key("this"))
                                    .Placeholder("Select Process Type")
                                )
                            </div>
                        </div>
                    </div>
                    <div class="dx-field" style="flex-grow: 5;">
                        <div class="dx-field">
                            <div class="dx-field-label" style="width: 30%;">
                                Explanation
                            </div>
                            <div class="dx-field-value" style="width: 70%;">
                                @(Html.DevExtreme().TextBoxFor(m => m.Arf.OtherProcessType)
                                    .Placeholder("Please explain")                                    
                                )
                            </div>
                        </div>
                    </div>
                </div>                

                <div class="flex-container" style="margin-left: 10%; width: 90%;">
                    <div class="dx-field" style="flex-grow: 3;">
                        <div class="dx-field-lable" style="width: 100%; text-align: left; margin-top: 6px;">
                            @(Html.DevExtreme().CheckBoxFor(m => m.Arf.PrintAttached)
                                .ID("PrintAttached")
                                .Text("Print Attached")
                                .Hint("If no print available, please provide sketch or photo.")
                                .ValidationStatus(Model.Arf.PrintAttached == null ? ValidationStatus.Invalid : ValidationStatus.Valid)
                                )
                        </div>
                    </div>
                    <div style="flex-grow: 7;">
                        <div class="dx-field-label" style="width: 100%; text-align: right; font-size:80%; color: dimgray;">
                            <i>If no print available, please provide sketch or photo.</i>
                        </div>
                    </div>
                </div>

                <div class="full-width-content" style="page-break-after: always;">
                    <div class="dx-widget">
                        @Html.LabelFor(m => m.Arf.ApplicationDescription)
                    </div>
                    <div class="dx-field">
                        @(Html.DevExtreme().TextAreaFor(m => m.Arf.ApplicationDescription)
                            .ID("ApplicationDescription")
                            .Placeholder("Application Description")
                            .Height(120)
                        )
                    </div>
                </div>
            </div>
        </div>

        <div class="dx-fieldset" id="field-container">
            <div class="dx-fieldset-header" style="text-align: left;">Samples Description</div>
            <div class="panel">

                <div class="dx-field" style="text-align: right;">
                    <div class="dx-field-label" style="width: 10%;">
                        Material 1
                    </div>
                    <div class="dx-field-value" style="width: 90%;">
                        @(Html.DevExtreme().TextBoxFor(m => m.Arf.Material1)
                            .Placeholder("Material 1")
                        )
                    </div>
                </div>
                <div class="dx-field" style="margin-top: 0px; text-align: right;">
                    <div class="dx-field-label" style="width: 10%;">
                        Description
                    </div>
                    <div class="dx-field-value" style="width: 90%;">
                        @(Html.DevExtreme().TextAreaFor(m => m.Arf.Material1Description)
                            .Placeholder("Description for Material 1")
                            .Height(70)
                        )
                    </div>
                </div>

                <div class="dx-field" style="text-align: right;">
                    <div class="dx-field-label" style="width: 10%;">
                        Material 2
                    </div>
                    <div class="dx-field-value" style="width: 90%;">
                        @(Html.DevExtreme().TextBoxFor(m => m.Arf.Material1)
                            .Placeholder("Material 2")
                        )
                    </div>
                </div>
                <div class="dx-field" style="margin-top: 0px; text-align: right;">
                    <div class="dx-field-label" style="width: 10%;">
                        Description
                    </div>
                    <div class="dx-field-value" style="width: 90%;">
                        @(Html.DevExtreme().TextAreaFor(m => m.Arf.Material2Description)
                            .Placeholder("Description for Material 2")
                            .Height(70)
                        )
                    </div>
                </div>

                <div class="flex-container" style="margin-left: 10%; width: 90%;">
                    <div class="dx-field" style="flex-grow: 3;">
                        <div class="dx-field-lable" style="width: 100%; text-align: left; margin-top: 6px;">
                            @(Html.DevExtreme().CheckBoxFor(m => m.Arf.MsdsSdsAttached)
                                .ID("MsdsSdsAttached")
                                .Text("MSDS/SDS Attached")
                                .ValidationStatus(Model.Arf.MsdsSdsAttached == null ? ValidationStatus.Invalid : ValidationStatus.Valid)
                                )
                        </div>
                    </div>
                    <div style="flex-grow: 7;">
                        <div class="dx-field-label" style="width: 100%; text-align: right; font-size:80%; color: dimgray;">
                            <i></i>
                        </div>
                    </div>
                </div>
            </div>            
        </div>

        //<div class="full-width-content" id="ExistingProcessSpace2" style="@(Model.Arf.NoExistingProcess ? "display:block;" : "display:none;")">
        <div class="dx-fieldset" id="field-container">
            
            <div class="dx-fieldset-header" style="text-align: left;">Existing Process Description</div>            
            <div class="panel">

                <div class="flex-container" style="margin-left: 10%; width: 90%;">
                    <div class="dx-field" style="flex-grow: 3;">
                        <div class="dx-field-lable" style="width: 100%; text-align: left; margin-top: 6px;">
                            @(Html.DevExtreme().CheckBoxFor(m => m.Arf.NoExistingProcess)
                                .ID("NoExistingProcess")
                                .Text("No Existing Process")
                                .OnValueChanged("NoExistingProcess_CheckBox_ValueChanged")  
                                .Value(@Model.Arf.NoExistingProcess)
                                )
                        </div>
                    </div>
                    <div style="flex-grow: 7;">
                        <div class="dx-field-label" style="width: 100%; text-align: right; font-size:80%; color: dimgray;">
                            <i></i>
                        </div>
                    </div>
                </div>

                <div class="flex-container" style="text-align: right;" id="ExistingProcessSpace1">
                    <div class="dx-field" style="flex-grow: 5; margin-left: -2px;">
                        <div class="dx-field">
                            <div class="dx-field-label" style="width: 21%;">
                                @Html.LabelFor(m => m.Arf.CurrentProcess)
                            </div>
                            <div class="dx-field-value" style="width: 79%;">
                                @(Html.DevExtreme().TextBoxFor(m => m.Arf.CurrentProcess)
                                    .ID("CurrentProcess")
                                    .Placeholder("Current Process")                                    
                                )
                            </div>
                        </div>
                    </div>
                    <div class="dx-field" style="flex-grow: 5;">
                        <div class="dx-field">
                            <div class="dx-field-label" style="width: 30%;" id="CurrentThroughputLabel">
                                @Html.LabelFor(m => m.Arf.CurrentThroughput)
                            </div>
                            <div class="dx-field-value" style="width: 70%;">
                                @(Html.DevExtreme().TextBoxFor(m => m.Arf.CurrentThroughput)
                                    .ID("CurrentThroughput")
                                    .Placeholder("Current Throughput")                                    
                                )
                            </div>
                        </div>
                    </div>
                </div>

                <div class="full-width-content" id="ExistingProcessSpace2">
                    <div class="dx-widget">
                        @Html.LabelFor(m => m.Arf.DescriptionReasonConsidering)
                    </div>
                    <div class="dx-field">
                        @(Html.DevExtreme().TextAreaFor(m => m.Arf.DescriptionReasonConsidering)
                            .ID("DescriptionReasonConsidering")
                            .Placeholder("Description Reason for considering")
                            .Height(120)
                        )
                    </div>
                </div>
            </div>
        </div>

         <div class="dx-fieldset" id="field-container">
            <div class="dx-fieldset-header" style="text-align: left;">Process Requirements (if known)</div>
            <div class="panel">

                <div class="flex-container" style="text-align: right;">
                    <div class="dx-field" style="flex-grow: 5; margin-left: 2px;">
                        <div class="dx-field">
                            <div class="dx-field-label" style="width: 21%;">
                                Laser
                            </div>
                            <div class="dx-field-value" style="width: 79%;">
                                @(Html.DevExtreme().SelectBoxFor(m => m.Arf.Laser)
                                    .DataSource(d => d.Mvc().Controller("DataSource").LoadAction("Lasers").Key("this"))
                                    .Placeholder("Select Laser")
                                )
                            </div>
                        </div>
                    </div>
                    <div class="dx-field" style="flex-grow: 5;">
                        <div class="dx-field">
                            <div class="dx-field-label" style="width: 30%;">
                                Wavelength
                            </div>
                            <div class="dx-field-value" style="width: 70%;">
                                @(Html.DevExtreme().SelectBoxFor(m => m.Arf.Wavelength)
                                    .DataSource(d => d.Mvc().Controller("DataSource").LoadAction("Wavelengths").Key("this"))
                                    .Placeholder("Select Wavelength")
                                )
                            </div>
                        </div>
                    </div>
                </div>    

                <div class="flex-container" style="text-align: right;">
                    <div class="dx-field" style="flex-grow: 51.5; margin-left: 2px;">
                        <div class="dx-field">
                            <div class="dx-field-label" style="width: 21%;">
                                Gas
                            </div>
                            <div class="dx-field-value" style="width: 79%;">                         
                                @(Html.DevExtreme().SelectBoxFor(m => m.Arf.ProcessGas)
                                    .DataSource(d => d.Mvc().Controller("DataSource").LoadAction("ProcessGases").Key("this"))
                                    .Placeholder("Select Process Gas")
                                )
                            </div>
                        </div>
                    </div>
                    <div class="dx-field" style="flex-grow: 48.5;">
                        <div class="dx-field">
                            <div class="dx-field-label" style="width: 30%;">
                                Other conditions
                            </div>
                            <div class="dx-field-value" style="width: 70%;">
                                @(Html.DevExtreme().TextBoxFor(m => m.Arf.OtherConditions)
                                    .Placeholder("Other conditions")                                    
                                )
                            </div>
                        </div>
                    </div>
                </div>

                <div class="flex-container" style="margin-left: 10%; width: 90%;">
                    <div class="dx-field" style="flex-grow: 3;">
                        <div class="dx-field-lable" style="width: 100%; text-align: left; margin-top: 6px;">
                            @(Html.DevExtreme().CheckBoxFor(m => m.Arf.FixturingProvided)
                                .ID("FixturingProvided")
                                .Text("Fixturing provided")
                                .ValidationStatus(Model.Arf.FixturingProvided == null ? ValidationStatus.Invalid : ValidationStatus.Valid)
                                )
                        </div>
                    </div>
                    <div style="flex-grow: 7;">
                        <div class="dx-field-label" style="width: 100%; text-align: right; font-size:80%; color: dimgray;">
                            <i></i>
                        </div>
                    </div>
                </div>

                <h6>Primary Concerns (Rate 1-5, 1 most important for you)</h6>

                <div class="flex-container" style="text-align: right;">
                    <div class="dx-field" style="flex-grow: 49; margin-left: -2px;">
                        <div class="dx-field">
                            <div class="dx-field-label" style="width: 21%;">
                                Quality
                            </div>
                            <div class="dx-field-value" style="width: 79%;">                         
                                @(Html.DevExtreme().SelectBoxFor(m => m.Arf.Quality)
                                    .DataSource(d => d.Mvc().Controller("DataSource").LoadAction("Rates1To5").Key("this"))
                                    .Placeholder("Select Quality Rate")
                                    .Hint("Rate 1-5, 1 most important for you.")
                                )
                            </div>
                        </div>
                    </div>
                    <div class="dx-field" style="flex-grow: 51;">
                        <div class="dx-field">
                            <div class="dx-field-label" style="width: 30%;">
                                Throughput
                            </div>
                            <div class="dx-field-value" style="width: 70%;">                         
                                @(Html.DevExtreme().SelectBoxFor(m => m.Arf.ProcessGas)
                                    .DataSource(d => d.Mvc().Controller("DataSource").LoadAction("Rates1To5").Key("this"))
                                    .Placeholder("Select Throughput Rate")
                                    .Hint("Rate 1-5, 1 most important for you.")
                                )
                            </div>
                        </div>
                    </div>
                </div>

                <div class="full-width-content">
                    <div class="dx-widget">
                        @Html.LabelFor(m => m.Arf.OtherConcerns)                        
                    </div>
                    <div class="dx-field">
                        @(Html.DevExtreme().TextAreaFor(m => m.Arf.OtherConcerns)
                            .Placeholder("Ex: Porosity, dross, HAZ etc. and additional comments")
                            .Height(120)
                        )
                    </div>
                </div>                
            </div>
        </div>

        <div class="dx-fieldset" id="field-container" style="page-break-after: always;">
            <div class="dx-fieldset-header">Testing Follow Up</div>
            <div class="panel">
                <div class="flex-container" style="margin-left: 10%; width: 90%;">
                    <div class="dx-field" style="flex-grow: 3;">
                        @(Html.DevExtreme().CheckBoxFor(m => m.Arf.NeedReturnCompletedSamples)
                            .ID("NeedReturnCompletedSamples")
                            .Text("Return completed Samples")
                            .ValidationStatus(Model.Arf.NeedReturnCompletedSamples == null ? ValidationStatus.Invalid : ValidationStatus.Valid)
                        )
                    </div>
                    <div class="dx-field" style="flex-grow: 3;">
                        @(Html.DevExtreme().CheckBoxFor(m => m.Arf.NeedReturnSubmittedParts)
                            .ID("NeedReturnSubmittedParts")
                            .Text("Return all submitted P")
                            .ValidationStatus(Model.Arf.NeedReturnSubmittedParts == null ? ValidationStatus.Invalid : ValidationStatus.Valid)
                        )
                    </div>
                    <div class="dx-field" style="flex-grow: 3;">
                        @(Html.DevExtreme().CheckBoxFor(m => m.Arf.SampleScrapUnused)
                            .ID("SampleScrapUnused")
                            .Text("Scrap unused Sample")
                            .ValidationStatus(Model.Arf.SampleScrapUnused == null ? ValidationStatus.Invalid : ValidationStatus.Valid)
                        )
                    </div>
                </div>

                <div class="flex-container" style="text-align: right;">
                    <div class="dx-field" style="flex-grow: 5; margin-left: 0px;">
                        <div class="dx-field">
                            <div class="dx-field-label" style="width: 20%;">
                                Shipping
                            </div>
                            <div class="dx-field-value" style="width: 80%;">
                                @(Html.DevExtreme().TextBoxFor(m => m.Arf.ShippingCompany)                                    
                                    .Placeholder("Shipping Company")
                                )
                            </div>
                        </div>
                    </div>
                    <div class="dx-field" style="flex-grow: 5;">
                        <div class="dx-field">
                            <div class="dx-field-label" style="width: 20%;">
                                Account
                            </div>
                            <div class="dx-field-value" style="width: 80%;">
                                @(Html.DevExtreme().TextBoxFor(m => m.Arf.AccountNumber)
                                    .Placeholder("Account Number")                                    
                                )
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div style="width: 100%; text-align: left; font-size:80%; color: darkred;">            
                <div class="panel-exclamation">
                    <i>IPG Photonics does not assume responsibility for costs for shipping or returning parts.</i><br>
                    <i>Any items left at IPG will be scrapped 30 days after completion of testing, unless alternate arrangements are made.</i>
                </div>          
            </div>
        </div>

        <div class="dx-fieldset" id="field-container">
            <div class="dx-fieldset-header" style="text-align: left;">Internal Notes</div>
            <div class="panel">

                <div class="full-width-content" style="margin-top: 0px;">
                    @(Html.DevExtreme().TextAreaFor(m => m.Arf.InternalNotes)
                        .Placeholder("Internal Notes")
                        .Height(270)
                    )
                </div>              
            </div>

            <div style="width: 100%; text-align: left; font-size:80%; color: lightslategray;">            
                <div class="panel-information">
                    <i><b>Please send this completed form with any attached prints, photos, documents to:</b>
                        <br>Attention: Vijay Kancharla
                        <br>IPG Photonics Corporation
                        <br>259 Cedar Hill Street 
                        <br>Marlborough,MA 01752
                        <br>Email: <a href="mailto:vkancharla@ipgphotonics.com">vkancharla@ipgphotonics.com</a>
                    </i>
                </div>
            </div>            
        </div>

        <div class="dx-fieldset" display="block">
            @(Html.DevExtreme().ValidationSummary()
                .ID("summary")
            )

            <div class="flex-container" style="margin-left: 0%; width: 100%;">
                <div class="dx-field" style="flex-grow: 3;">

                    @(Html.DevExtreme().Button()
                        .ID("import-button")
                        .Text("Import Data")
                        .Icon("import")
                        .Type(ButtonType.Normal)
                        .UseSubmitBehavior(false)
                        .OnClick("ImportButton_Click")
                    )
                    @(Html.DevExtreme().Button()
                        .ID("save-button")
                        .Text("Save")
                        .Icon("save")
                        .Type(ButtonType.Default)
                        .UseSubmitBehavior(false)
                        .OnClick("SaveButton_Click")
                    )
                </div>
 
                <div class="dx-field" style="flex-grow: 6;">
                    @(Html.DevExtreme().Button()
                        .ID("submit-button")
                        .Text("Submit")
                        .Icon("check")
                        .Type(ButtonType.Success)
                        .UseSubmitBehavior(true)
                        //.OnClick("SubmitButton_Click")
                    )
                </div>
            </div>
        </div>        
    }
}

@section Scripts {<script type="text/javascript">
    var arf = @Html.Raw(Json.Serialize(Model.Arf));

    function Language_ValueChanged(e) {
        var href = "http://" + window.location.host;
        switch (e.value) {
            case 1: href += "/Arf/ArfDe"; break;
            case 2: href += "/Arf/ArfRu"; break;
            case 3: href += "/Arf/ArfCh"; break;
            case 4: href += "/Arf/ArfIt"; break;
            case 5: href += "/Arf/ArfJa"; break;         
        }
        window.location.assign(href.toLowerCase()); // сохраняется в истории сеансов
    }
    
    function NoExistingProcess_CheckBox_ValueChanged(e) {                
        //$("#CurrentProcess").dxTextBox("instance").option("visible", e.value);
        //$("#CurrentThroughput").dxTextBox("instance").option("visible", e.value);
        //$("#DescriptionReasonConsidering").dxTextArea("instance").option("visible", e.value);
        $("#CurrentProcess").dxTextBox("instance").option("disabled", e.value);
        $("#CurrentThroughput").dxTextBox("instance").option("disabled", e.value);
        $("#DescriptionReasonConsidering").dxTextArea("instance").option("disabled", e.value);   
    }

    function ImportButton_Click(e) {
        //https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify
        DevExpress.ui.notify({ message: 'ImportButton_Click', width: 320 }, "success", 1000);
        $("#ApplicationDescription").dxTextArea("instance").option("value", JSON.stringify(arf));
    }

    function SaveButton_Click(e) {
        //https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse
        const json = '{"result":true, "count":42}';
        const obj = JSON.parse(json);

        console.log(obj.count); // expected output: 42

        console.log(obj.result); // expected output: true        
    }

    function SubmitButton_Click(form) {
        alert("submit");
    }

    $(document).ready( // Дождаться полной загрузки страницы
        // Хендлер события OnChange, поменять значение target.html
        //function () {
        //    $('.class-name-event').on("change", function () {
        //        var fileName = $(this).val().split("\\").pop();
        //        $(this).next('.class-name-target').html(fileName);
        //    });
        //});
        )

    function Test_СheckBox_ValueChanged(e) {
        //DevExpress.ui.notify({ message: 'Value: ' + e.value, width: 320 }, "success", 1000);
        var buttonText = e.component.option("text");
        DevExpress.ui.notify("The " + buttonText + " button was clicked");
        //Fails
        //e.text = "ewrdf";
        //e.option
        //e.isValid = false;
        //e.validationError
        //e.validationErrors
    }

    function Test_CheckBox_ValueChanged(e) {
        //obj.value = true;
        //success, danger, normal, что-то ещё...
        DevExpress.ui.notify({ message: 'Value: ' + e.value, width: 320 }, "normal", 1000);
        //$("#ClassifiedOrControlled").dxCheckBox("instance").option("value", e.value);
        //$("#ClassifiedOrControlled").dxCheckBox("instance").option("disabled", e.value);
        $("#ClassifiedOrControlled").dxCheckBox("instance").option("isValid", e.value);
        $("#ClassifiedOrControlled").dxCheckBox("instance").option("visible", e.value);
        //window.location.replace("/Arf/ArfDe"); //не сохраняется в истории сеансов
        //window.location.href(href); //сохраняется в истории сеансов
        //window.open(href,"_top"); // сохраняется в истории сеансов, открыть в текущей вкладке
        //window.open(href); // сохраняется в истории сеансов, открыть в новой вкладке
    }            
</script>}

<h6>Todo:</h6>
Настроить валидацию (в т.ч. по флажку).
<br>Обновить справочник стран.
<br>Please explain - должен отображаться только когда требуется.
<br>Сохранить документ в формате PDF.
<br>Не проверять блок NoExistingProcess, если он отключен
<br>
<br>1. как выгружать заполненные данные в JSON и загружать обратно;
<br>2. как сформировать PDF, чтобы клиент мог распечатать ARF и отправить с образцами материалов.

